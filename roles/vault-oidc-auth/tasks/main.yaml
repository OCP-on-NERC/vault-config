- name: Get client secret
  set_fact:
    oidc_client_secret: "{{ lookup('community.hashi_vault.vault_kv2_get', oidc_client_secret_path, engine_mount_point=oidc_secret_mount, token_validate=false).secret[oidc_client_secret_key] }}"

- name: Check if oidc auth is enabled
  community.hashi_vault.vault_read:
    token_validate: false
    path: /sys/auth
  register: auths
  changed_when: >-
    "{}/".format(oidc_path) not in auths.data

- name: Enable OIDC auth
  when: >-
    auths is changed
  community.hashi_vault.vault_write:
    token_validate: false
    path: "/sys/auth/{{ oidc_path }}"
    data:
      type: oidc
      config:
        listing_visibility: unauth

- name: Configure OIDC auth
  community.hashi_vault.vault_write:
    token_validate: false
    path: "/auth/{{ oidc_path }}/config"
    data:
      oidc_client_id: "{{ oidc_client_id }}"
      oidc_client_secret: "{{ oidc_client_secret }}"
      oidc_discovery_url: "{{ oidc_discovery_url }}"
      default_role: "{{ oidc_default_role }}"

- name: Configure role for OIDC auth
  community.hashi_vault.vault_write:
    token_validate: false
    path: "/auth/{{ oidc_path }}/role/{{ oidc_default_role }}"
    data:
      policies: default
      user_claim: name
      groups_claim: groups
      allowed_redirect_uris: "{{ oidc_redirect_uris }}"
      oidc_scopes: openid,email,groups,profile
